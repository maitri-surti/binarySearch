var _0x4c97=["VARIABLES_GET_TOOLTIP","LISTS_SET_INDEX_TOOLTIP_SET_RANDOM","EXPAND_ALL","DELETE_X_BLOCKS","IOS_VARIABLES_ADD_VARIABLE","TEXT_LENGTH_TITLE","Collapse Blocks","modes of list","LISTS_CREATE_EMPTY_TITLE","LISTS_CREATE_WITH_TOOLTIP","to lower case","Delete %1 Blocks","get substring from letter #","TEXT_PRINT_HELPURL","LOGIC_OPERATION_OR","http://c2.com/cgi/wiki?GuardClause","Add, remove, or reorder sections to reconfigure this text block.","PROCEDURES_DEFNORETURN_PROCEDURE","MATH_SINGLE_OP_ABSOLUTE","INPUTS","TEXT_REVERSE_HELPURL","LOGIC_NEGATE_TOOLTIP","Run the user-defined function '%1' and use its output.","Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.","Can't delete the variable '%1' because it's part of the definition of the function '%2'","LISTS_SPLIT_LIST_FROM_TEXT","CONTROLS_IF_MSG_ELSEIF","TEXT_CHANGECASE_OPERATOR_TITLECASE","find last occurrence of item","TEXT_PRINT_TITLE","Returns null.","LISTS_REPEAT_HELPURL","CONTROLS_WHILEUNTIL_HELPURL","Return the average (arithmetic mean) of the numeric values in the list.","This function has duplicate inputs.","NEW_VARIABLE_TYPE_TITLE","LOGIC_OPERATION_HELPURL","with:","CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK","LISTS_REPEAT_TOOLTIP","LISTS_GET_SUBLIST_START_FIRST","MATH_IS_ODD","MATH_SUBTRACTION_SYMBOL","if true","CONTROLS_FOREACH_INPUT_DO","LISTS_GET_INDEX_TOOLTIP_GET_FIRST","Return true if both inputs are true.","TEXT_GET_SUBSTRING_INPUT_IN_TEXT","Inline Inputs","VARIABLES_GET_CREATE_SET","https://en.wikipedia.org/wiki/Inequality_(mathematics)","310","https://en.wikipedia.org/wiki/Color","TEXT_REPLACE_MESSAGE0","Add a final, catch-all condition to the if block.","Create 'set %1'","LOGIC_NEGATE_HELPURL","+ Add Input","UNDO","LISTS_SET_INDEX_TOOLTIP_SET_FROM","Create number variable...","get substring from letter # from end","%1 is empty","RENAME_VARIABLE_TITLE","MATH_IS_DIVISIBLE_BY","If a value is true, then do some statements.","is odd","LOGIC_BOOLEAN_FALSE","colour with","random colour","Add an item to the text.","210","LISTS_REPEAT_TITLE","https://github.com/google/blockly/wiki/Logic#not","LISTS_CREATE_EMPTY_HELPURL","TEXT_CREATE_JOIN_TOOLTIP","MATH_CONSTANT_TOOLTIP","MATH_NUMBER_TOOLTIP","Create colour variable...","LISTS_GET_INDEX_FROM_START","https://github.com/google/blockly/wiki/Text#trimming-removing-spaces","COLOUR_BLEND_RATIO","https://github.com/google/blockly/wiki/Loops#count-with","LISTS_INDEX_OF_INPUT_IN_LIST","repeat while","VARIABLES_GET_HELPURL","to UPPER CASE","Return the base 10 logarithm of a number.","TEXT_CHARAT_FIRST","VARIABLE_ALREADY_EXISTS","make list from text","LISTS_CREATE_WITH_HELPURL","https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists","LISTS_CREATE_WITH_ITEM_TOOLTIP","MATH_ARITHMETIC_TOOLTIP_ADD","MATH_ROUND_TOOLTIP","MATH_ONLIST_TOOLTIP_MODE","PROCEDURES_CREATE_DO","Return the negation of a number.","VARIABLES_SET_CREATE_GET","MATH_TRIG_ASIN","CONTROLS_REPEAT_HELPURL","https://en.wikipedia.org/wiki/Arithmetic","Return true if both inputs are not equal to each other.","Describe this function...","NEW_STRING_VARIABLE","MATH_IS_EVEN","COLLAPSED_WARNINGS_WARNING","TEXT_GET_SUBSTRING_TAIL","Highlight function definition","CONTROLS_FOREACH_TOOLTIP","Redo","list","is prime","Return the arccosine of a number.","TEXT_GET_SUBSTRING_START_FIRST","Msg","random","TEXT_TEXT_HELPURL","LISTS_INLIST","CONTROLS_IF_ELSEIF_TOOLTIP","for each item %1 in list %2","PROCEDURES_DEFRETURN_COMMENT","TEXT_TRIM_OPERATOR_LEFT","TEXT_REPLACE_TOOLTIP","get random letter","Returns the first item in a list.","asin","CONTROLS_WHILEUNTIL_OPERATOR_WHILE","insert at","TEXT_CREATE_JOIN_ITEM_TOOLTIP","LISTS_GET_INDEX_INPUT_IN_LIST","MATH_ROUND_OPERATOR_ROUNDDOWN","%1 is the first item.","LISTS_CREATE_WITH_CONTAINER_TITLE_ADD","Removes the last item in a list.","Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).","http://randomcolour.com","TEXT_INDEXOF_OPERATOR_FIRST","https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list","TEXT_PROMPT_HELPURL","ENABLE_BLOCK","Removes the first item in a list.","TEXT_TRIM_OPERATOR_RIGHT","TEXT_APPEND_VARIABLE","COLOUR_RGB_HELPURL","prompt for text with message","numeric","CONTROLS_IF_IF_TOOLTIP","LISTS_SORT_TYPE_IGNORECASE","return","Returns true if the input is false. Returns false if the input is true.","CONTROLS_FOR_TOOLTIP","Returns the value of this variable.","While a value is true, then do some statements.","MATH_ONLIST_OPERATOR_MODE","PROCEDURES_CALLNORETURN_TOOLTIP","https://github.com/google/blockly/wiki/Text#replacing-substrings","LISTS_CREATE_WITH_INPUT_WITH","+ Add Variable","TEXT_REVERSE_MESSAGE0","https://github.com/google/blockly/wiki/Text#text-creation","constrain %1 low %2 high %3","inputs","CONTROLS_WHILEUNTIL_TOOLTIP_WHILE","MATH_MODULO_TITLE","Join a list of texts into one text, separated by a delimiter.","PROCEDURES_CALLRETURN_HELPURL","blue","Removes a random item in a list.","https://en.wikipedia.org/wiki/Square_root","Returns the letter at the specified position.","LISTS_SET_INDEX_INSERT","IOS_VARIABLES_RENAME_BUTTON","true","unnamed","LISTS_GET_INDEX_FIRST","MATH_ONLIST_OPERATOR_MEDIAN","PROCEDURES_CALLNORETURN_HELPURL","Delete Block","PROCEDURES_MUTATORCONTAINER_TITLE","PROCEDURES_DEFNORETURN_DO","PROCEDURES_CALLRETURN_TOOLTIP","COLOUR_RANDOM_TOOLTIP","LOGIC_COMPARE_TOOLTIP_GTE","to #","prompt for number with message","TEXT_CREATE_JOIN_TITLE_JOIN","Add, remove, or reorder sections to reconfigure this if block.","LISTS_LENGTH_TITLE","TEXT_CREATE_JOIN_ITEM_TITLE_ITEM","LISTS_GET_SUBLIST_END_LAST","ADD_COMMENT","MATH_IS_WHOLE","LOGIC_NULL_TOOLTIP","TEXT_JOIN_TITLE_CREATEWITH","Return true if both inputs equal each other.","CONTROLS_IF_ELSE_TITLE_ELSE","length of %1","LISTS_SPLIT_TEXT_FROM_LIST","LISTS_GET_INDEX_TOOLTIP_GET_LAST","make text from list","TEXT_GET_SUBSTRING_START_FROM_END","MATH_ONLIST_HELPURL","LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST","LISTS_INDEX_OF_HELPURL","Returns true if the list is empty.","Removes and returns the last item in a list.","PROCEDURES_IFRETURN_HELPURL","CANNOT_DELETE_VARIABLE_PROCEDURE","Reverses the order of the characters in the text.","PROCEDURES_DEFNORETURN_HELPURL","VARIABLES_DYNAMIC_HUE","MATH_HUE","Prompt for user for some text.","and","LISTS_SET_INDEX_TOOLTIP_INSERT_FROM","https://en.wikipedia.org/wiki/Nullable_type","LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST","to letter # from end","COLOUR_RGB_BLUE","MATH_CHANGE_TITLE_ITEM","LOGIC_TERNARY_TOOLTIP","https://github.com/google/blockly/wiki/Logic#values","COLOUR_RGB_TITLE","MATH_IS_POSITIVE","MATH_ONLIST_OPERATOR_STD_DEV","Return the product of the two numbers.","MATH_TRIG_TOOLTIP_TAN","MATH_CONSTRAIN_HELPURL","CONTROLS_FOREACH_HELPURL","change %1 by %2","While a value is false, then do some statements.","MATH_ONLIST_OPERATOR_MAX","You can't use an empty variable name.","get first letter","MATH_CHANGE_HELPURL","MATH_SINGLE_HELPURL","Returns the length of a list.","TEXT_ISEMPTY_HELPURL","TEXT_CHARAT_TAIL","LISTS_GET_INDEX_TOOLTIP_GET_FROM","PROCEDURES_MUTATORARG_TITLE","red","LISTS_SORT_TITLE","MATH_RANDOM_FLOAT_TOOLTIP","PROCEDURES_CALL_BEFORE_PARAMS","TEXT_CHARAT_TOOLTIP","LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST","EXPAND_BLOCK","CONTROLS_IF_ELSE_TOOLTIP","LISTS_GET_SUBLIST_START_FROM_END","NEW_NUMBER_VARIABLE","LISTS_INDEX_FROM_START_TOOLTIP","get letter #","CONTROLS_IF_MSG_THEN","CONTROLS_IF_MSG_IF","MATH_TRIG_COS","TEXT_LENGTH_TOOLTIP","LISTS_SET_INDEX_HELPURL","LISTS_SORT_ORDER_DESCENDING","is divisible by","create empty list","else if","PROCEDURES_IFRETURN_TOOLTIP","MATH_IS_PRIME","MATH_NUMBER_HELPURL","https://github.com/google/blockly/wiki/Loops#for-each","colour 2","LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM","MATH_ROUND_OPERATOR_ROUND","https://github.com/google/blockly/wiki/Logic#logical-operations","WORKSPACE_COMMENT_DEFAULT_TEXT","EXTERNAL_INPUTS","Return the median number in the list.","LOGIC_HUE","IOS_ERROR","IOS_VARIABLES_EMPTY_NAME_ERROR","PROCEDURES_MUTATORCONTAINER_TOOLTIP","Returns a specified portion of the text.","LISTS_SET_INDEX_TOOLTIP_SET_LAST","LOGIC_NEGATE_TITLE","Sets the item at the specified position in a list.","MATH_TRIG_TOOLTIP_ACOS","Return the standard deviation of the list.","LOGIC_COMPARE_HELPURL","Return the sine of a degree (not radian).","TEXT_CHANGECASE_OPERATOR_UPPERCASE","MATH_TRIG_ATAN","repeat until","https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text","MATH_RANDOM_INT_HELPURL","break out of loop","LISTS_GET_INDEX_TOOLTIP_GET_RANDOM","New variable type:","NEW_VARIABLE","LISTS_GET_SUBLIST_END_FROM_START","VARIABLES_HUE","LISTS_REVERSE_TOOLTIP","count %1 in %2","MATH_ONLIST_OPERATOR_RANDOM","PROCEDURES_ALLOW_STATEMENTS","Run the user-defined function '%1'.","Inserts the item at the start of a list.","square root","https://en.wikipedia.org/wiki/Mathematical_constant","LISTS_GET_SUBLIST_START_FROM_START","COLOUR_RANDOM_HELPURL","LISTS_CREATE_WITH_ITEM_TITLE","CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE","LISTS_GET_INDEX_RANDOM","Creates a function with no output.","LISTS_INDEX_OF_TOOLTIP","New variable name:","Append the item to the end of a list.","Return the absolute value of a number.","LOGIC_OPERATION_AND","find last occurrence of text","VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE","CONTROLS_IF_IF_TITLE_IF","PROCEDURES_DEFRETURN_RETURN","LISTS_GET_SUBLIST_TAIL","average of list","MATH_ONLIST_TOOLTIP_MEDIAN","VARIABLES_SET_TOOLTIP","IOS_CANCEL","continue with next iteration of loop","CONTROLS_IF_HELPURL","Return true if the first input is greater than or equal to the second input.","Inserts the item randomly in a list.","print %1","min of list","Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.","MATH_ONLIST_OPERATOR_SUM","If a value is true, then do the first block of statements. Otherwise, do the second block of statements.","CONTROLS_REPEAT_TITLE","Prompt for user for a number.","https://en.wikipedia.org/wiki/Rounding","WORKSPACE_ARIA_LABEL","is negative","LISTS_LENGTH_TOOLTIP","https://github.com/google/blockly/wiki/Text#counting-substrings","https://en.wikipedia.org/wiki/Atan2","Return the cosine of a degree (not radian).","https://en.wikipedia.org/wiki/Trigonometric_functions","COLLAPSE_BLOCK","Sets the last item in a list.","cos","https://github.com/google/blockly/wiki/Variables#get","Return the sum of the two numbers.","COLLAPSE_ALL","get and remove","Warning: This block may be used only within a function definition.","LISTS_GET_INDEX_HELPURL","COLOUR_BLEND_HELPURL","VARIABLES_SET_HELPURL","Rename all '%1' variables to:","Returns the number of letters (including spaces) in the provided text.","INLINE_INPUTS","Creates a copy of the specified portion of a list.","Add, remove, or reorder inputs to this function.","PROCEDURES_BEFORE_PARAMS","not %1","LISTS_SORT_TOOLTIP","Sets this variable to be equal to the input.","CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL","MATH_TRIG_HELPURL","160","green","TODAY","VARIABLES_DEFAULT_NAME","Delete all %1 blocks?","https://github.com/google/blockly/wiki/Lists#create-list-with","120","max of list","LISTS_SORT_TYPE_TEXT","REMOVE_COMMENT","MATH_ONLIST_OPERATOR_MIN","TEXT_JOIN_HELPURL","https://github.com/google/blockly/wiki/Lists#sorting-a-list","COLOUR_RGB_GREEN","CONTROLS_FLOW_STATEMENTS_WARNING","https://github.com/google/blockly/wiki/IfElse","MATH_ARITHMETIC_TOOLTIP_MINUS","TEXT_CHARAT_FROM_START","A variable named '%1' already exists.","Return the natural logarithm of a number.","is whole","Print the specified text, number or other value.","round up","https://github.com/google/blockly/wiki/Text#text-modification","CONTROLS_IF_TOOLTIP_4","DUPLICATE_COMMENT","to # from end","PROCEDURES_DEFRETURN_TITLE","MATH_IS_NEGATIVE","LISTS_CREATE_EMPTY_TOOLTIP","TEXT_PROMPT_TOOLTIP_NUMBER","A number.","Return a copy of the text in a different case.","MATH_SINGLE_OP_ROOT","LISTS_GET_SUBLIST_INPUT_IN_LIST","LISTS_SPLIT_TOOLTIP_SPLIT","CONTROLS_FOR_INPUT_DO","CONTROLS_WHILEUNTIL_INPUT_DO","Split text into a list of texts, breaking at each delimiter.","MATH_ATAN2_TOOLTIP","LOGIC_NULL_HELPURL","Help","COLOUR_BLEND_TOOLTIP","Sets the first item in a list.","Returns a random item in a list.","LOGIC_COMPARE_TOOLTIP_LTE","Expand Blocks","https://en.wikipedia.org/wiki/Modulo_operation","%1 is the last item.","Return the smallest number in the list.","is positive","MATH_RANDOM_INT_TOOLTIP","Choose a colour at random.","absolute","LOGIC_COMPARE_TOOLTIP_LT","DELETE_VARIABLE_CONFIRMATION","LISTS_HUE","PROCEDURES_DEFNORETURN_COMMENT","MATH_ATAN2_TITLE","Creates a list consisting of the given value repeated the specified number of times.","For each item in a list, set the variable '%1' to the item, and then do some statements.","LOGIC_BOOLEAN_TOOLTIP","Return e to the power of a number.","LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST","IOS_VARIABLES_DELETE_BUTTON","sort %1 %2 %3","LISTS_SPLIT_TOOLTIP_JOIN","UNNAMED_KEY","Creates a function with an output.","Enable Block","MATH_ONLIST_TOOLTIP_SUM","CLEAN_UP","MATH_SINGLE_TOOLTIP_ABS","allow statements","TEXT_PROMPT_TYPE_NUMBER","Return the arcsine of a number.","DELETE_ALL_BLOCKS","LISTS_GET_INDEX_REMOVE","to last letter","https://en.wikipedia.org/wiki/Number","LOGIC_TERNARY_IF_TRUE","else","TEXT_COUNT_HELPURL","MATH_ONLIST_TOOLTIP_STD_DEV","trim spaces from both sides of","https://github.com/google/blockly/wiki/Loops#loop-termination-blocks","MATH_ATAN2_HELPURL","Add","LISTS_GET_INDEX_LAST","IOS_OK","MATH_DIVISION_SYMBOL","TEXT_GET_SUBSTRING_START_FROM_START","330","replace %1 with %2 in %3","CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE","CONTROLS_FOR_HELPURL","If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.","TEXT_INDEXOF_TOOLTIP","LISTS_SORT_TYPE_NUMERIC","External Inputs","get last letter","COLOUR_RGB_RED","https://github.com/google/blockly/wiki/Loops#repeat","https://en.wikipedia.org/wiki/Subroutine","Return the difference of the two numbers.","TEXT_TRIM_HELPURL","LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST","find first occurrence of item","Duplicate","CONTROLS_FOR_TITLE","sin","TEXT_GET_SUBSTRING_END_FROM_END","LISTS_GET_SUBLIST_END_FROM_END","in text %1 %2","COLOUR_BLEND_TITLE","Return the largest number in the list.","ORDINAL_NUMBER_SUFFIX","MATH_RANDOM_INT_TITLE","Skip the rest of this loop, and continue with the next iteration.","LOGIC_BOOLEAN_TRUE","MATH_CONSTANT_HELPURL","MATH_RANDOM_FLOAT_TITLE_RANDOM","MATH_TRIG_TOOLTIP_COS","Removes the item at the specified position in a list.","Return a copy of the text with spaces removed from one or both ends.","https://github.com/google/blockly/wiki/Lists#create-empty-list","MATH_TRIG_TOOLTIP_SIN","repeat %1 times","Removes and returns the item at the specified position in a list.","https://en.wikipedia.org/wiki/Random_number_generation","Inserts the item at the specified position in a list.","LISTS_GET_INDEX_GET_REMOVE","Return a random element from the list.","TEXT_CHARAT_TITLE","https://github.com/google/blockly/wiki/Text#extracting-text","TEXT_INDEXOF_OPERATOR_LAST","TEXT_GET_SUBSTRING_END_FROM_START","LISTS_SPLIT_WITH_DELIMITER","to Title Case","LOOPS_HUE","TEXT_CHARAT_RANDOM","get sub-list from #","Duplicate Comment","Clean up Blocks","last","LOGIC_COMPARE_TOOLTIP_GT","Blends two colours together with a given ratio (0.0 - 1.0).","TEXT_TEXT_TOOLTIP","median of list","test","Add an item to the list.","MATH_MODULO_TOOLTIP","MATH_ARITHMETIC_TOOLTIP_MULTIPLY","LISTS_SET_INDEX_SET","get letter # from end","TEXT_ISEMPTY_TITLE","CONTROLS_IF_MSG_ELSE","LISTS_GET_INDEX_TAIL","Reverse a copy of a list.","Delete","item","Create string variable...","MATH_CONSTRAIN_TOOLTIP","TEXT_GET_SUBSTRING_HELPURL","LISTS_INDEX_OF_LAST","Return the arctangent of a number.","if false","random fraction","remove","MATH_ONLIST_OPERATOR_AVERAGE","https://github.com/google/blockly/wiki/Text#getting-input-from-the-user","false","Add a condition to the if block.","https://meyerweb.com/eric/tools/color-blend/#:::rgbp","IOS_PROCEDURES_ADD_INPUT","TEXT_JOIN_TOOLTIP","Return the arctangent of point (X, Y) in degrees from -180 to 180.","TEXT_REVERSE_TOOLTIP","Allow statements","TEXT_LENGTH_HELPURL","230","https://github.com/google/blockly/wiki/Lists#getting-a-sublist","MATH_IS_TOOLTIP","MATH_CONSTRAIN_TITLE","MATH_ARITHMETIC_TOOLTIP_POWER","LISTS_ISEMPTY_TOOLTIP","LOGIC_OPERATION_TOOLTIP_OR","Break out of the containing loop.","colour 1","LOGIC_OPERATION_TOOLTIP_AND","atan","LISTS_REVERSE_HELPURL","LISTS_SET_INDEX_TOOLTIP_INSERT_LAST","do something","Return true if the first input is greater than the second input.","to last","LISTS_LENGTH_HELPURL","is even","TEXTS_HUE","IOS_PROCEDURES_INPUTS","Add a number to variable '%1'.","Count how many times some text occurs within some other text.","COLOUR_HUE","TEXT_PROMPT_TOOLTIP_TEXT","Return a list of the most common item(s) in the list.","Add Comment","Blockly Workspace","first","Create a piece of text by joining together any number of items.","PROCEDURES_DEFRETURN_PROCEDURE","Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.","MATH_SINGLE_TOOLTIP_EXP","A variable named '%1' already exists for another type: '%2'.","TEXT_COUNT_MESSAGE0","round down","Return true if the first input is smaller than the second input.","PROCEDURES_DEFNORETURN_TOOLTIP","Rename variable...","trim spaces from left side of","PROCEDURES_DEFNORETURN_TITLE","Sets a random item in a list.","MATH_RANDOM_FLOAT_HELPURL","MATH_TRIG_TOOLTIP_ATAN","count with %1 from %2 to %3 by %4","remainder of %1 ÷ %2","290","LOGIC_COMPARE_TOOLTIP_NEQ","ascending","CONTROLS_REPEAT_INPUT_DO","Removes and returns the first item in a list.","Today","Change value:","get","MATH_CHANGE_TOOLTIP","Delete the '%1' variable","random item of list","acos","Constrain a number to be between the specified limits (inclusive).","LOGIC_BOOLEAN_HELPURL","TEXT_GET_SUBSTRING_END_LAST","Delete %1 uses of the '%2' variable?","reverse %1","Create '%1'","MATH_POWER_SYMBOL","RENAME_VARIABLE","TEXT_INDEXOF_HELPURL","https://en.wikipedia.org/wiki/String_(computer_science)"];!function(_){!function(e){for(;--e;)_.push(_.shift())}(110)}(_0x4c97);var _0x3e91=function(e,_){return _0x4c97[e-=0]};Blockly[_0x3e91("0x7")][_0x3e91("0x53")]=_0x3e91("0x1cf"),Blockly[_0x3e91("0x7")][_0x3e91("0x64")]=_0x3e91("0x211"),Blockly[_0x3e91("0x7")].CHANGE_VALUE_TITLE=_0x3e91("0x1e9"),Blockly[_0x3e91("0x7")][_0x3e91("0x149")]=_0x3e91("0x191"),Blockly[_0x3e91("0x7")][_0x3e91("0x264")]="Collapsed blocks contain warnings.",Blockly[_0x3e91("0x7")][_0x3e91("0xf1")]=_0x3e91("0x1ff"),Blockly[_0x3e91("0x7")][_0x3e91("0xec")]="Collapse Block",Blockly[_0x3e91("0x7")].COLOUR_BLEND_COLOUR1=_0x3e91("0x1be"),Blockly[_0x3e91("0x7")].COLOUR_BLEND_COLOUR2=_0x3e91("0x9f"),Blockly[_0x3e91("0x7")][_0x3e91("0xf5")]=_0x3e91("0x1af"),Blockly.Msg[_0x3e91("0x24a")]="ratio",Blockly.Msg[_0x3e91("0x174")]="blend",Blockly[_0x3e91("0x7")][_0x3e91("0x12c")]=_0x3e91("0x194"),Blockly[_0x3e91("0x7")].COLOUR_PICKER_HELPURL=_0x3e91("0x22d"),Blockly[_0x3e91("0x7")].COLOUR_PICKER_TOOLTIP="Choose a colour from the palette.",Blockly[_0x3e91("0x7")][_0x3e91("0xc6")]=_0x3e91("0x1c"),Blockly[_0x3e91("0x7")].COLOUR_RANDOM_TITLE=_0x3e91("0x23e"),Blockly.Msg[_0x3e91("0x4a")]=_0x3e91("0x136"),Blockly[_0x3e91("0x7")][_0x3e91("0x6f")]=_0x3e91("0x3b"),Blockly[_0x3e91("0x7")][_0x3e91("0x10f")]=_0x3e91("0x103"),Blockly.Msg[_0x3e91("0x24")]="https://www.december.com/html/spec/colorpercompact.html",Blockly.Msg[_0x3e91("0x167")]=_0x3e91("0x86"),Blockly[_0x3e91("0x7")][_0x3e91("0x73")]=_0x3e91("0x23d"),Blockly.Msg.COLOUR_RGB_TOOLTIP="Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.",Blockly[_0x3e91("0x7")].CONTROLS_FLOW_STATEMENTS_HELPURL=_0x3e91("0x157"),Blockly[_0x3e91("0x7")][_0x3e91("0x21f")]=_0x3e91("0xb7"),Blockly[_0x3e91("0x7")][_0x3e91("0xc8")]=_0x3e91("0xd9"),Blockly[_0x3e91("0x7")].CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK=_0x3e91("0x1bd"),Blockly.Msg[_0x3e91("0x160")]=_0x3e91("0x178"),Blockly[_0x3e91("0x7")][_0x3e91("0x110")]="Warning: This block may only be used within a loop.",Blockly[_0x3e91("0x7")][_0x3e91("0x79")]=_0x3e91("0x9e"),Blockly[_0x3e91("0x7")].CONTROLS_FOREACH_TITLE=_0x3e91("0xc"),Blockly.Msg[_0x3e91("0x1")]=_0x3e91("0x13e"),Blockly[_0x3e91("0x7")][_0x3e91("0x161")]=_0x3e91("0x24b"),Blockly[_0x3e91("0x7")][_0x3e91("0x16f")]=_0x3e91("0x1e1"),Blockly[_0x3e91("0x7")][_0x3e91("0x2b")]=_0x3e91("0x1d4"),Blockly.Msg[_0x3e91("0xb")]=_0x3e91("0x1ae"),Blockly[_0x3e91("0x7")][_0x3e91("0x8d")]=_0x3e91("0x22f"),Blockly[_0x3e91("0x7")][_0x3e91("0xda")]=_0x3e91("0x111"),Blockly[_0x3e91("0x7")][_0x3e91("0x27")]=_0x3e91("0x4f"),Blockly.Msg.CONTROLS_IF_MSG_ELSE=_0x3e91("0x153"),Blockly[_0x3e91("0x7")][_0x3e91("0x213")]=_0x3e91("0x9a"),Blockly[_0x3e91("0x7")][_0x3e91("0x93")]="if",Blockly[_0x3e91("0x7")].CONTROLS_IF_TOOLTIP_1=_0x3e91("0x23a"),Blockly[_0x3e91("0x7")].CONTROLS_IF_TOOLTIP_2=_0x3e91("0xe1"),Blockly[_0x3e91("0x7")].CONTROLS_IF_TOOLTIP_3=_0x3e91("0x162"),Blockly[_0x3e91("0x7")][_0x3e91("0x11a")]="If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.",Blockly.Msg[_0x3e91("0x25e")]="https://en.wikipedia.org/wiki/For_loop",Blockly.Msg[_0x3e91("0x1e6")]="do",Blockly.Msg[_0x3e91("0xe2")]=_0x3e91("0x181"),Blockly[_0x3e91("0x7")].CONTROLS_REPEAT_TOOLTIP="Do some statements several times.",Blockly[_0x3e91("0x7")][_0x3e91("0x219")]=_0x3e91("0x168"),Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL=_0x3e91("0xb4"),Blockly[_0x3e91("0x7")][_0x3e91("0x13")]=_0x3e91("0x24d"),Blockly[_0x3e91("0x7")][_0x3e91("0x100")]=_0x3e91("0x7b"),Blockly[_0x3e91("0x7")][_0x3e91("0x37")]=_0x3e91("0x2d"),Blockly[_0x3e91("0x7")][_0x3e91("0x14e")]=_0x3e91("0x106"),Blockly[_0x3e91("0x7")].DELETE_BLOCK=_0x3e91("0x46"),Blockly[_0x3e91("0x7")].DELETE_VARIABLE=_0x3e91("0x1ec"),Blockly.Msg[_0x3e91("0x139")]=_0x3e91("0x1f2"),Blockly[_0x3e91("0x7")][_0x3e91("0x1fc")]=_0x3e91("0x204"),Blockly[_0x3e91("0x7")].DISABLE_BLOCK="Disable Block",Blockly.Msg.DUPLICATE_BLOCK=_0x3e91("0x16e"),Blockly[_0x3e91("0x7")][_0x3e91("0x11b")]=_0x3e91("0x190"),Blockly[_0x3e91("0x7")][_0x3e91("0x20")]=_0x3e91("0x147"),Blockly.Msg[_0x3e91("0x1fb")]=_0x3e91("0x130"),Blockly[_0x3e91("0x7")][_0x3e91("0x8c")]="Expand Block",Blockly[_0x3e91("0x7")][_0x3e91("0xa4")]=_0x3e91("0x165"),Blockly.Msg.HELP=_0x3e91("0x12b"),Blockly[_0x3e91("0x7")][_0x3e91("0xf9")]=_0x3e91("0x229"),Blockly[_0x3e91("0x7")][_0x3e91("0xd8")]="Cancel",Blockly[_0x3e91("0x7")][_0x3e91("0xa7")]="Error",Blockly[_0x3e91("0x7")][_0x3e91("0x15b")]="OK",Blockly.Msg[_0x3e91("0x1b0")]=_0x3e91("0x232"),Blockly[_0x3e91("0x7")].IOS_PROCEDURES_ALLOW_STATEMENTS=_0x3e91("0x1b4"),Blockly.Msg.IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR=_0x3e91("0x21b"),Blockly[_0x3e91("0x7")][_0x3e91("0x1c9")]=_0x3e91("0x20c"),Blockly[_0x3e91("0x7")].IOS_VARIABLES_ADD_BUTTON=_0x3e91("0x159"),Blockly[_0x3e91("0x7")][_0x3e91("0x1fd")]=_0x3e91("0x32"),Blockly[_0x3e91("0x7")][_0x3e91("0x142")]=_0x3e91("0x1a1"),Blockly[_0x3e91("0x7")][_0x3e91("0xa8")]=_0x3e91("0x7d"),Blockly[_0x3e91("0x7")][_0x3e91("0x40")]="Rename",Blockly[_0x3e91("0x7")].IOS_VARIABLES_VARIABLE_NAME="Variable name",Blockly[_0x3e91("0x7")][_0x3e91("0x243")]=_0x3e91("0x17f"),Blockly.Msg[_0x3e91("0x201")]=_0x3e91("0x99"),Blockly[_0x3e91("0x7")][_0x3e91("0x11f")]="Returns a list, of length 0, containing no data records",Blockly[_0x3e91("0x7")][_0x3e91("0x19")]=_0x3e91("0x3"),Blockly[_0x3e91("0x7")].LISTS_CREATE_WITH_CONTAINER_TOOLTIP="Add, remove, or reorder sections to reconfigure this list block.",Blockly.Msg[_0x3e91("0x254")]=_0x3e91("0x107"),Blockly.Msg[_0x3e91("0x31")]="create list with",Blockly[_0x3e91("0x7")][_0x3e91("0x256")]=_0x3e91("0x198"),Blockly[_0x3e91("0x7")][_0x3e91("0x202")]="Create a list with any number of items.",Blockly[_0x3e91("0x7")][_0x3e91("0x43")]=_0x3e91("0x1d1"),Blockly[_0x3e91("0x7")].LISTS_GET_INDEX_FROM_END="# from end",Blockly[_0x3e91("0x7")][_0x3e91("0x248")]="#",Blockly[_0x3e91("0x7")].LISTS_GET_INDEX_GET=_0x3e91("0x1ea"),Blockly[_0x3e91("0x7")][_0x3e91("0x185")]=_0x3e91("0xf2"),Blockly[_0x3e91("0x7")][_0x3e91("0x15a")]=_0x3e91("0x192"),Blockly[_0x3e91("0x7")][_0x3e91("0xc9")]=_0x3e91("0x8"),Blockly[_0x3e91("0x7")][_0x3e91("0x14f")]=_0x3e91("0x1aa"),Blockly.Msg[_0x3e91("0x19f")]="",Blockly[_0x3e91("0x7")][_0x3e91("0x226")]=_0x3e91("0x11"),Blockly[_0x3e91("0x7")][_0x3e91("0x84")]="Returns the item at the specified position in a list.",Blockly[_0x3e91("0x7")][_0x3e91("0x5b")]="Returns the last item in a list.",Blockly[_0x3e91("0x7")][_0x3e91("0xb8")]=_0x3e91("0x12e"),Blockly[_0x3e91("0x7")][_0x3e91("0x141")]=_0x3e91("0x1e7"),Blockly[_0x3e91("0x7")].LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM=_0x3e91("0x182"),Blockly[_0x3e91("0x7")][_0x3e91("0x5f")]=_0x3e91("0x62"),Blockly[_0x3e91("0x7")].LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM="Removes and returns a random item in a list.",Blockly[_0x3e91("0x7")][_0x3e91("0x8b")]=_0x3e91("0x21"),Blockly[_0x3e91("0x7")][_0x3e91("0xa0")]=_0x3e91("0x17d"),Blockly[_0x3e91("0x7")][_0x3e91("0x16c")]=_0x3e91("0x1a"),Blockly[_0x3e91("0x7")].LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM=_0x3e91("0x3c"),Blockly[_0x3e91("0x7")][_0x3e91("0x172")]=_0x3e91("0x11c"),Blockly.Msg[_0x3e91("0xbb")]=_0x3e91("0x4c"),Blockly.Msg[_0x3e91("0x52")]=_0x3e91("0x1c5"),Blockly[_0x3e91("0x7")].LISTS_GET_SUBLIST_HELPURL=_0x3e91("0x1b7"),Blockly[_0x3e91("0x7")][_0x3e91("0x221")]="get sub-list from first",Blockly[_0x3e91("0x7")][_0x3e91("0x8e")]="get sub-list from # from end",Blockly[_0x3e91("0x7")][_0x3e91("0xc5")]=_0x3e91("0x18f"),Blockly[_0x3e91("0x7")][_0x3e91("0xd4")]="",Blockly[_0x3e91("0x7")].LISTS_GET_SUBLIST_TOOLTIP=_0x3e91("0xfa"),Blockly[_0x3e91("0x7")].LISTS_INDEX_FROM_END_TOOLTIP=_0x3e91("0x132"),Blockly[_0x3e91("0x7")][_0x3e91("0x90")]=_0x3e91("0x18"),Blockly[_0x3e91("0x7")].LISTS_INDEX_OF_FIRST=_0x3e91("0x16d"),Blockly[_0x3e91("0x7")][_0x3e91("0x60")]=_0x3e91("0x1e"),Blockly[_0x3e91("0x7")][_0x3e91("0x1a6")]=_0x3e91("0x215"),Blockly[_0x3e91("0x7")][_0x3e91("0xcb")]=_0x3e91("0xdf"),Blockly[_0x3e91("0x7")][_0x3e91("0xa")]="in list",Blockly[_0x3e91("0x7")].LISTS_ISEMPTY_HELPURL="https://github.com/google/blockly/wiki/Lists#is-empty",Blockly[_0x3e91("0x7")].LISTS_ISEMPTY_TITLE=_0x3e91("0x237"),Blockly[_0x3e91("0x7")][_0x3e91("0x1bb")]=_0x3e91("0x61"),Blockly.Msg[_0x3e91("0x1c6")]="https://github.com/google/blockly/wiki/Lists#length-of",Blockly[_0x3e91("0x7")][_0x3e91("0x50")]=_0x3e91("0x59"),Blockly.Msg[_0x3e91("0xe7")]=_0x3e91("0x81"),Blockly.Msg[_0x3e91("0x218")]=_0x3e91("0x107"),Blockly[_0x3e91("0x7")][_0x3e91("0x241")]="create list with item %1 repeated %2 times",Blockly[_0x3e91("0x7")][_0x3e91("0x220")]=_0x3e91("0x13d"),Blockly[_0x3e91("0x7")][_0x3e91("0x1c1")]="https://github.com/google/blockly/wiki/Lists#reversing-a-list",Blockly[_0x3e91("0x7")].LISTS_REVERSE_MESSAGE0=_0x3e91("0x1f3"),Blockly.Msg[_0x3e91("0xbd")]=_0x3e91("0x1a0"),Blockly.Msg[_0x3e91("0x96")]="https://github.com/google/blockly/wiki/Lists#in-list--set",Blockly[_0x3e91("0x7")].LISTS_SET_INDEX_INPUT_TO="as",Blockly[_0x3e91("0x7")][_0x3e91("0x3f")]=_0x3e91("0x14"),Blockly[_0x3e91("0x7")][_0x3e91("0x19b")]="set",Blockly[_0x3e91("0x7")][_0x3e91("0x6d")]=_0x3e91("0xc2"),Blockly[_0x3e91("0x7")][_0x3e91("0x6b")]=_0x3e91("0x184"),Blockly[_0x3e91("0x7")][_0x3e91("0x1c2")]=_0x3e91("0xcd"),Blockly[_0x3e91("0x7")].LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM=_0x3e91("0xdc"),Blockly[_0x3e91("0x7")].LISTS_SET_INDEX_TOOLTIP_SET_FIRST=_0x3e91("0x12d"),Blockly[_0x3e91("0x7")][_0x3e91("0x234")]=_0x3e91("0xad"),Blockly[_0x3e91("0x7")][_0x3e91("0xab")]=_0x3e91("0xed"),Blockly[_0x3e91("0x7")][_0x3e91("0x1fa")]=_0x3e91("0x1de"),Blockly.Msg.LISTS_SORT_HELPURL=_0x3e91("0x10e"),Blockly[_0x3e91("0x7")].LISTS_SORT_ORDER_ASCENDING=_0x3e91("0x1e5"),Blockly.Msg[_0x3e91("0x97")]="descending",Blockly[_0x3e91("0x7")][_0x3e91("0x87")]=_0x3e91("0x143"),Blockly[_0x3e91("0x7")][_0x3e91("0xfe")]="Sort a copy of a list.",Blockly[_0x3e91("0x7")][_0x3e91("0x28")]="alphabetic, ignore case",Blockly[_0x3e91("0x7")][_0x3e91("0x164")]=_0x3e91("0x26"),Blockly[_0x3e91("0x7")][_0x3e91("0x10a")]="alphabetic",Blockly[_0x3e91("0x7")].LISTS_SPLIT_HELPURL=_0x3e91("0x255"),Blockly[_0x3e91("0x7")][_0x3e91("0x212")]=_0x3e91("0x253"),Blockly.Msg[_0x3e91("0x5a")]=_0x3e91("0x5c"),Blockly[_0x3e91("0x7")][_0x3e91("0x144")]=_0x3e91("0x39"),Blockly.Msg[_0x3e91("0x125")]=_0x3e91("0x128"),Blockly.Msg[_0x3e91("0x18b")]="with delimiter",Blockly[_0x3e91("0x7")][_0x3e91("0x23c")]=_0x3e91("0x1ad"),Blockly[_0x3e91("0x7")][_0x3e91("0x1f0")]=_0x3e91("0x72"),Blockly[_0x3e91("0x7")][_0x3e91("0x13f")]="Returns either true or false.",Blockly.Msg[_0x3e91("0x179")]=_0x3e91("0x41"),Blockly[_0x3e91("0x7")][_0x3e91("0xb0")]=_0x3e91("0x22b"),Blockly[_0x3e91("0x7")].LOGIC_COMPARE_TOOLTIP_EQ=_0x3e91("0x57"),Blockly[_0x3e91("0x7")][_0x3e91("0x193")]=_0x3e91("0x1c4"),Blockly[_0x3e91("0x7")][_0x3e91("0x4b")]=_0x3e91("0xdb"),Blockly[_0x3e91("0x7")][_0x3e91("0x138")]=_0x3e91("0x1d9"),Blockly[_0x3e91("0x7")][_0x3e91("0x12f")]="Return true if the first input is smaller than or equal to the second input.",Blockly[_0x3e91("0x7")][_0x3e91("0x1e4")]=_0x3e91("0x260"),Blockly[_0x3e91("0x7")][_0x3e91("0x231")]=_0x3e91("0x242"),Blockly[_0x3e91("0x7")][_0x3e91("0xac")]=_0x3e91("0xfd"),Blockly.Msg[_0x3e91("0x20e")]=_0x3e91("0x2a"),Blockly[_0x3e91("0x7")].LOGIC_NULL="null",Blockly[_0x3e91("0x7")][_0x3e91("0x12a")]=_0x3e91("0x6c"),Blockly.Msg[_0x3e91("0x55")]=_0x3e91("0x217"),Blockly[_0x3e91("0x7")][_0x3e91("0xcf")]=_0x3e91("0x6a"),Blockly.Msg[_0x3e91("0x21d")]=_0x3e91("0xa2"),Blockly.Msg[_0x3e91("0x207")]="or",Blockly[_0x3e91("0x7")][_0x3e91("0x1bf")]=_0x3e91("0x227"),Blockly[_0x3e91("0x7")][_0x3e91("0x1bc")]="Return true if at least one of the inputs is true.",Blockly[_0x3e91("0x7")].LOGIC_TERNARY_CONDITION=_0x3e91("0x197"),Blockly[_0x3e91("0x7")].LOGIC_TERNARY_HELPURL="https://en.wikipedia.org/wiki/%3F:",Blockly[_0x3e91("0x7")].LOGIC_TERNARY_IF_FALSE=_0x3e91("0x1a8"),Blockly.Msg[_0x3e91("0x152")]=_0x3e91("0x224"),Blockly[_0x3e91("0x7")][_0x3e91("0x71")]=_0x3e91("0x210"),Blockly[_0x3e91("0x7")].MATH_ADDITION_SYMBOL="+",Blockly[_0x3e91("0x7")].MATH_ARITHMETIC_HELPURL=_0x3e91("0x25f"),Blockly[_0x3e91("0x7")][_0x3e91("0x257")]=_0x3e91("0xf0"),Blockly[_0x3e91("0x7")].MATH_ARITHMETIC_TOOLTIP_DIVIDE="Return the quotient of the two numbers.",Blockly[_0x3e91("0x7")][_0x3e91("0x112")]=_0x3e91("0x16a"),Blockly[_0x3e91("0x7")][_0x3e91("0x19a")]=_0x3e91("0x76"),Blockly[_0x3e91("0x7")][_0x3e91("0x1ba")]="Return the first number raised to the power of the second number.",Blockly[_0x3e91("0x7")][_0x3e91("0x158")]=_0x3e91("0xe9"),Blockly[_0x3e91("0x7")][_0x3e91("0x13c")]="atan2 of X:%1 Y:%2",Blockly.Msg[_0x3e91("0x129")]=_0x3e91("0x1b2"),Blockly.Msg[_0x3e91("0x7f")]="https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter",Blockly[_0x3e91("0x7")].MATH_CHANGE_TITLE=_0x3e91("0x7a"),Blockly[_0x3e91("0x7")][_0x3e91("0x1eb")]=_0x3e91("0x1ca"),Blockly[_0x3e91("0x7")][_0x3e91("0x17a")]=_0x3e91("0xc4"),Blockly[_0x3e91("0x7")][_0x3e91("0x245")]=_0x3e91("0x1b"),Blockly.Msg[_0x3e91("0x78")]="https://en.wikipedia.org/wiki/Clamping_(graphics)",Blockly.Msg[_0x3e91("0x1b9")]=_0x3e91("0x35"),Blockly[_0x3e91("0x7")][_0x3e91("0x1a4")]=_0x3e91("0x1ef"),Blockly[_0x3e91("0x7")][_0x3e91("0x15c")]="÷",Blockly[_0x3e91("0x7")][_0x3e91("0x239")]=_0x3e91("0x98"),Blockly[_0x3e91("0x7")][_0x3e91("0x263")]=_0x3e91("0x1c7"),Blockly[_0x3e91("0x7")][_0x3e91("0x11e")]=_0x3e91("0xe6"),Blockly[_0x3e91("0x7")][_0x3e91("0x222")]=_0x3e91("0x23b"),Blockly[_0x3e91("0x7")][_0x3e91("0x74")]=_0x3e91("0x134"),Blockly[_0x3e91("0x7")][_0x3e91("0x9c")]=_0x3e91("0x4"),Blockly[_0x3e91("0x7")][_0x3e91("0x1b8")]="Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.",Blockly[_0x3e91("0x7")][_0x3e91("0x54")]=_0x3e91("0x116"),Blockly[_0x3e91("0x7")].MATH_MODULO_HELPURL=_0x3e91("0x131"),Blockly[_0x3e91("0x7")][_0x3e91("0x38")]=_0x3e91("0x1e2"),Blockly[_0x3e91("0x7")][_0x3e91("0x199")]="Return the remainder from dividing the two numbers.",Blockly.Msg.MATH_MULTIPLICATION_SYMBOL="×",Blockly.Msg[_0x3e91("0x9d")]=_0x3e91("0x151"),Blockly[_0x3e91("0x7")][_0x3e91("0x246")]=_0x3e91("0x121"),Blockly[_0x3e91("0x7")][_0x3e91("0x5e")]="",Blockly[_0x3e91("0x7")][_0x3e91("0x1ab")]=_0x3e91("0xd5"),Blockly[_0x3e91("0x7")][_0x3e91("0x7c")]=_0x3e91("0x109"),Blockly[_0x3e91("0x7")][_0x3e91("0x44")]=_0x3e91("0x196"),Blockly[_0x3e91("0x7")][_0x3e91("0x10c")]=_0x3e91("0xde"),Blockly[_0x3e91("0x7")][_0x3e91("0x2e")]=_0x3e91("0x200"),Blockly[_0x3e91("0x7")][_0x3e91("0xbf")]=_0x3e91("0x1ed"),Blockly[_0x3e91("0x7")][_0x3e91("0x75")]="standard deviation of list",Blockly[_0x3e91("0x7")][_0x3e91("0xe0")]="sum of list",Blockly[_0x3e91("0x7")].MATH_ONLIST_TOOLTIP_AVERAGE=_0x3e91("0x21a"),Blockly[_0x3e91("0x7")].MATH_ONLIST_TOOLTIP_MAX=_0x3e91("0x175"),Blockly[_0x3e91("0x7")][_0x3e91("0xd6")]=_0x3e91("0xa5"),Blockly[_0x3e91("0x7")].MATH_ONLIST_TOOLTIP_MIN=_0x3e91("0x133"),Blockly[_0x3e91("0x7")][_0x3e91("0x259")]=_0x3e91("0x1ce"),Blockly[_0x3e91("0x7")].MATH_ONLIST_TOOLTIP_RANDOM=_0x3e91("0x186"),Blockly[_0x3e91("0x7")][_0x3e91("0x155")]=_0x3e91("0xaf"),Blockly[_0x3e91("0x7")][_0x3e91("0x148")]="Return the sum of all the numbers in the list.",Blockly[_0x3e91("0x7")][_0x3e91("0x1f5")]="^",Blockly[_0x3e91("0x7")][_0x3e91("0x1df")]=_0x3e91("0x183"),Blockly[_0x3e91("0x7")][_0x3e91("0x17b")]=_0x3e91("0x1a9"),Blockly[_0x3e91("0x7")][_0x3e91("0x88")]="Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).",Blockly[_0x3e91("0x7")][_0x3e91("0xb6")]=_0x3e91("0x183"),Blockly[_0x3e91("0x7")][_0x3e91("0x177")]="random integer from %1 to %2",Blockly[_0x3e91("0x7")][_0x3e91("0x135")]="Return a random integer between the two specified limits, inclusive.",Blockly[_0x3e91("0x7")].MATH_ROUND_HELPURL=_0x3e91("0xe4"),Blockly.Msg[_0x3e91("0xa1")]="round",Blockly[_0x3e91("0x7")][_0x3e91("0x17")]=_0x3e91("0x1d8"),Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP=_0x3e91("0x118"),Blockly[_0x3e91("0x7")][_0x3e91("0x258")]="Round a number up or down.",Blockly.Msg[_0x3e91("0x80")]=_0x3e91("0x3d"),Blockly[_0x3e91("0x7")][_0x3e91("0x20b")]=_0x3e91("0x137"),Blockly[_0x3e91("0x7")][_0x3e91("0x123")]=_0x3e91("0xc3"),Blockly[_0x3e91("0x7")][_0x3e91("0x14a")]=_0x3e91("0xce"),Blockly[_0x3e91("0x7")][_0x3e91("0x1d5")]=_0x3e91("0x140"),Blockly[_0x3e91("0x7")].MATH_SINGLE_TOOLTIP_LN=_0x3e91("0x115"),Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10=_0x3e91("0x250"),Blockly[_0x3e91("0x7")].MATH_SINGLE_TOOLTIP_NEG=_0x3e91("0x25b"),Blockly[_0x3e91("0x7")].MATH_SINGLE_TOOLTIP_POW10="Return 10 to the power of a number.",Blockly[_0x3e91("0x7")].MATH_SINGLE_TOOLTIP_ROOT="Return the square root of a number.",Blockly[_0x3e91("0x7")][_0x3e91("0x223")]="-",Blockly[_0x3e91("0x7")].MATH_TRIG_ACOS=_0x3e91("0x1ee"),Blockly[_0x3e91("0x7")][_0x3e91("0x25d")]=_0x3e91("0x12"),Blockly[_0x3e91("0x7")][_0x3e91("0xb3")]=_0x3e91("0x1c0"),Blockly[_0x3e91("0x7")][_0x3e91("0x94")]=_0x3e91("0xee"),Blockly.Msg[_0x3e91("0x101")]=_0x3e91("0xeb"),Blockly.Msg.MATH_TRIG_SIN=_0x3e91("0x170"),Blockly[_0x3e91("0x7")].MATH_TRIG_TAN="tan",Blockly[_0x3e91("0x7")][_0x3e91("0xae")]=_0x3e91("0x5"),Blockly[_0x3e91("0x7")].MATH_TRIG_TOOLTIP_ASIN=_0x3e91("0x14d"),Blockly.Msg[_0x3e91("0x1e0")]=_0x3e91("0x1a7"),Blockly[_0x3e91("0x7")][_0x3e91("0x17c")]=_0x3e91("0xea"),Blockly.Msg[_0x3e91("0x180")]=_0x3e91("0xb1"),Blockly[_0x3e91("0x7")][_0x3e91("0x77")]="Return the tangent of a degree (not radian).",Blockly.Msg.NEW_COLOUR_VARIABLE=_0x3e91("0x247"),Blockly[_0x3e91("0x7")][_0x3e91("0x8f")]=_0x3e91("0x235"),Blockly[_0x3e91("0x7")][_0x3e91("0x262")]=_0x3e91("0x1a3"),Blockly[_0x3e91("0x7")][_0x3e91("0xba")]="Create variable...",Blockly.Msg.NEW_VARIABLE_TITLE=_0x3e91("0xcc"),Blockly[_0x3e91("0x7")][_0x3e91("0x21c")]=_0x3e91("0xb9"),Blockly[_0x3e91("0x7")][_0x3e91("0x176")]="",Blockly.Msg[_0x3e91("0xc0")]=_0x3e91("0x14b"),Blockly[_0x3e91("0x7")][_0x3e91("0xfc")]=_0x3e91("0x21e"),Blockly.Msg[_0x3e91("0x45")]="https://en.wikipedia.org/wiki/Subroutine",Blockly[_0x3e91("0x7")][_0x3e91("0x2f")]=_0x3e91("0xc1"),Blockly[_0x3e91("0x7")][_0x3e91("0x3a")]=_0x3e91("0x169"),Blockly[_0x3e91("0x7")][_0x3e91("0x49")]=_0x3e91("0x20f"),Blockly[_0x3e91("0x7")][_0x3e91("0x89")]=_0x3e91("0x21e"),Blockly[_0x3e91("0x7")][_0x3e91("0x25a")]=_0x3e91("0x1f4"),Blockly[_0x3e91("0x7")][_0x3e91("0x13b")]=_0x3e91("0x261"),Blockly.Msg.PROCEDURES_DEFNORETURN_DO="",Blockly[_0x3e91("0x7")][_0x3e91("0x66")]=_0x3e91("0x169"),Blockly[_0x3e91("0x7")].PROCEDURES_DEFNORETURN_PROCEDURE=_0x3e91("0x1c3"),Blockly.Msg[_0x3e91("0x1dd")]="to",Blockly[_0x3e91("0x7")][_0x3e91("0x1da")]=_0x3e91("0xca"),Blockly[_0x3e91("0x7")].PROCEDURES_DEFRETURN_HELPURL="https://en.wikipedia.org/wiki/Subroutine",Blockly[_0x3e91("0x7")][_0x3e91("0xd3")]=_0x3e91("0x29"),Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP=_0x3e91("0x146"),Blockly[_0x3e91("0x7")].PROCEDURES_DEF_DUPLICATE_WARNING="Warning: This function has duplicate parameters.",Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF=_0x3e91("0x0"),Blockly[_0x3e91("0x7")][_0x3e91("0x63")]=_0x3e91("0x208"),Blockly[_0x3e91("0x7")][_0x3e91("0x9b")]="If a value is true, then return a second value.",Blockly[_0x3e91("0x7")].PROCEDURES_IFRETURN_WARNING=_0x3e91("0xf3"),Blockly[_0x3e91("0x7")][_0x3e91("0x85")]="input name:",Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP="Add an input to the function.",Blockly[_0x3e91("0x7")][_0x3e91("0x47")]=_0x3e91("0x36"),Blockly[_0x3e91("0x7")][_0x3e91("0xa9")]=_0x3e91("0xfb"),Blockly[_0x3e91("0x7")].REDO=_0x3e91("0x2"),Blockly[_0x3e91("0x7")][_0x3e91("0x10b")]="Remove Comment",Blockly[_0x3e91("0x7")][_0x3e91("0x1f6")]=_0x3e91("0x1db"),Blockly[_0x3e91("0x7")][_0x3e91("0x238")]=_0x3e91("0xf7"),Blockly.Msg.TEXT_APPEND_HELPURL="https://github.com/google/blockly/wiki/Text#text-modification",Blockly[_0x3e91("0x7")].TEXT_APPEND_TITLE="to %1 append text %2",Blockly[_0x3e91("0x7")].TEXT_APPEND_TOOLTIP="Append some text to variable '%1'.",Blockly[_0x3e91("0x7")].TEXT_CHANGECASE_HELPURL="https://github.com/google/blockly/wiki/Text#adjusting-text-case",Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE=_0x3e91("0x203"),Blockly[_0x3e91("0x7")][_0x3e91("0x214")]=_0x3e91("0x18c"),Blockly.Msg[_0x3e91("0xb2")]=_0x3e91("0x24f"),Blockly.Msg.TEXT_CHANGECASE_TOOLTIP=_0x3e91("0x122"),Blockly[_0x3e91("0x7")][_0x3e91("0x251")]=_0x3e91("0x7e"),Blockly[_0x3e91("0x7")].TEXT_CHARAT_FROM_END=_0x3e91("0x19c"),Blockly.Msg[_0x3e91("0x113")]=_0x3e91("0x91"),Blockly.Msg.TEXT_CHARAT_HELPURL=_0x3e91("0x188"),Blockly.Msg.TEXT_CHARAT_LAST=_0x3e91("0x166"),Blockly.Msg[_0x3e91("0x18e")]=_0x3e91("0x10"),Blockly[_0x3e91("0x7")][_0x3e91("0x83")]="",Blockly[_0x3e91("0x7")][_0x3e91("0x187")]=_0x3e91("0x173"),Blockly[_0x3e91("0x7")][_0x3e91("0x8a")]=_0x3e91("0x3e"),Blockly[_0x3e91("0x7")][_0x3e91("0x154")]=_0x3e91("0xe8"),Blockly[_0x3e91("0x7")][_0x3e91("0x1d7")]=_0x3e91("0xbe"),Blockly[_0x3e91("0x7")].TEXT_COUNT_TOOLTIP=_0x3e91("0x1cb"),Blockly[_0x3e91("0x7")][_0x3e91("0x15")]=_0x3e91("0x23f"),Blockly[_0x3e91("0x7")][_0x3e91("0x4e")]="join",Blockly[_0x3e91("0x7")][_0x3e91("0x244")]=_0x3e91("0x209"),Blockly[_0x3e91("0x7")][_0x3e91("0x171")]=_0x3e91("0x6e"),Blockly[_0x3e91("0x7")][_0x3e91("0x18a")]="to letter #",Blockly[_0x3e91("0x7")][_0x3e91("0x1f1")]=_0x3e91("0x150"),Blockly[_0x3e91("0x7")][_0x3e91("0x1a5")]=_0x3e91("0xb5"),Blockly[_0x3e91("0x7")][_0x3e91("0x228")]="in text",Blockly[_0x3e91("0x7")][_0x3e91("0x6")]="get substring from first letter",Blockly[_0x3e91("0x7")][_0x3e91("0x5d")]=_0x3e91("0x236"),Blockly[_0x3e91("0x7")][_0x3e91("0x15d")]=_0x3e91("0x205"),Blockly[_0x3e91("0x7")][_0x3e91("0x265")]="",Blockly[_0x3e91("0x7")].TEXT_GET_SUBSTRING_TOOLTIP=_0x3e91("0xaa"),Blockly[_0x3e91("0x7")][_0x3e91("0x1f7")]="https://github.com/google/blockly/wiki/Text#finding-text",Blockly[_0x3e91("0x7")][_0x3e91("0x1d")]="find first occurrence of text",Blockly[_0x3e91("0x7")][_0x3e91("0x189")]=_0x3e91("0xd0"),Blockly[_0x3e91("0x7")].TEXT_INDEXOF_TITLE="in text %1 %2 %3",Blockly[_0x3e91("0x7")][_0x3e91("0x163")]="Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.",Blockly[_0x3e91("0x7")][_0x3e91("0x82")]="https://github.com/google/blockly/wiki/Text#checking-for-empty-text",Blockly[_0x3e91("0x7")][_0x3e91("0x19d")]="%1 is empty",Blockly[_0x3e91("0x7")].TEXT_ISEMPTY_TOOLTIP="Returns true if the provided text is empty.",Blockly[_0x3e91("0x7")][_0x3e91("0x10d")]=_0x3e91("0x34"),Blockly[_0x3e91("0x7")][_0x3e91("0x56")]="create text with",Blockly[_0x3e91("0x7")][_0x3e91("0x1b1")]=_0x3e91("0x1d2"),Blockly[_0x3e91("0x7")][_0x3e91("0x1b5")]=_0x3e91("0x119"),Blockly[_0x3e91("0x7")][_0x3e91("0x1fe")]=_0x3e91("0x59"),Blockly[_0x3e91("0x7")][_0x3e91("0x95")]=_0x3e91("0xf8"),Blockly[_0x3e91("0x7")][_0x3e91("0x206")]="https://github.com/google/blockly/wiki/Text#printing-text",Blockly[_0x3e91("0x7")][_0x3e91("0x216")]=_0x3e91("0xdd"),Blockly[_0x3e91("0x7")].TEXT_PRINT_TOOLTIP=_0x3e91("0x117"),Blockly.Msg[_0x3e91("0x1f")]=_0x3e91("0x1ac"),Blockly.Msg[_0x3e91("0x120")]=_0x3e91("0xe3"),Blockly[_0x3e91("0x7")][_0x3e91("0x1cd")]=_0x3e91("0x69"),Blockly[_0x3e91("0x7")][_0x3e91("0x14c")]=_0x3e91("0x4d"),Blockly[_0x3e91("0x7")].TEXT_PROMPT_TYPE_TEXT=_0x3e91("0x25"),Blockly[_0x3e91("0x7")].TEXT_REPLACE_HELPURL=_0x3e91("0x30"),Blockly[_0x3e91("0x7")][_0x3e91("0x22e")]=_0x3e91("0x15f"),Blockly[_0x3e91("0x7")][_0x3e91("0xf")]="Replace all occurances of some text within some other text.",Blockly[_0x3e91("0x7")][_0x3e91("0x20d")]="https://github.com/google/blockly/wiki/Text#reversing-text",Blockly[_0x3e91("0x7")][_0x3e91("0x33")]=_0x3e91("0x1f3"),Blockly.Msg[_0x3e91("0x1b3")]=_0x3e91("0x65"),Blockly[_0x3e91("0x7")][_0x3e91("0x9")]=_0x3e91("0x1f8"),Blockly[_0x3e91("0x7")][_0x3e91("0x195")]="A letter, word, or line of text.",Blockly[_0x3e91("0x7")][_0x3e91("0x16b")]=_0x3e91("0x249"),Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH=_0x3e91("0x156"),Blockly[_0x3e91("0x7")][_0x3e91("0xe")]=_0x3e91("0x1dc"),Blockly[_0x3e91("0x7")][_0x3e91("0x22")]="trim spaces from right side of",Blockly.Msg.TEXT_TRIM_TOOLTIP=_0x3e91("0x17e"),Blockly[_0x3e91("0x7")][_0x3e91("0x104")]=_0x3e91("0x1e8"),Blockly[_0x3e91("0x7")][_0x3e91("0x233")]="Undo",Blockly[_0x3e91("0x7")][_0x3e91("0x145")]=_0x3e91("0x42"),Blockly[_0x3e91("0x7")].VARIABLES_DEFAULT_NAME=_0x3e91("0x1a2"),Blockly[_0x3e91("0x7")][_0x3e91("0x22a")]=_0x3e91("0x230"),Blockly[_0x3e91("0x7")][_0x3e91("0x24e")]=_0x3e91("0xef"),Blockly.Msg[_0x3e91("0x1f9")]=_0x3e91("0x2c"),Blockly[_0x3e91("0x7")].VARIABLES_SET="set %1 to %2",Blockly[_0x3e91("0x7")][_0x3e91("0x25c")]="Create 'get %1'",Blockly[_0x3e91("0x7")][_0x3e91("0xf6")]="https://github.com/google/blockly/wiki/Variables#set",Blockly[_0x3e91("0x7")][_0x3e91("0xd7")]=_0x3e91("0xff"),Blockly[_0x3e91("0x7")][_0x3e91("0x252")]=_0x3e91("0x114"),Blockly[_0x3e91("0x7")][_0x3e91("0xd1")]=_0x3e91("0x1d6"),Blockly[_0x3e91("0x7")][_0x3e91("0xe5")]=_0x3e91("0x1d0"),Blockly[_0x3e91("0x7")][_0x3e91("0xa3")]="Say something...",Blockly[_0x3e91("0x7")][_0x3e91("0x225")]=Blockly[_0x3e91("0x7")].CONTROLS_REPEAT_INPUT_DO,Blockly[_0x3e91("0x7")][_0x3e91("0x126")]=Blockly[_0x3e91("0x7")][_0x3e91("0x1e6")],Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF=Blockly[_0x3e91("0x7")].CONTROLS_IF_MSG_ELSEIF,Blockly[_0x3e91("0x7")][_0x3e91("0x58")]=Blockly[_0x3e91("0x7")][_0x3e91("0x19e")],Blockly[_0x3e91("0x7")][_0x3e91("0xd2")]=Blockly[_0x3e91("0x7")][_0x3e91("0x93")],Blockly[_0x3e91("0x7")][_0x3e91("0x92")]=Blockly[_0x3e91("0x7")][_0x3e91("0x1e6")],Blockly[_0x3e91("0x7")][_0x3e91("0x127")]=Blockly[_0x3e91("0x7")][_0x3e91("0x1e6")],Blockly[_0x3e91("0x7")][_0x3e91("0xc7")]=Blockly[_0x3e91("0x7")][_0x3e91("0x105")],Blockly.Msg[_0x3e91("0xf4")]=Blockly.Msg[_0x3e91("0x60")],Blockly[_0x3e91("0x7")][_0x3e91("0x16")]=Blockly[_0x3e91("0x7")][_0x3e91("0xa")],Blockly[_0x3e91("0x7")][_0x3e91("0x124")]=Blockly.Msg.LISTS_INLIST,Blockly[_0x3e91("0x7")][_0x3e91("0x24c")]=Blockly[_0x3e91("0x7")][_0x3e91("0xa")],Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST=Blockly[_0x3e91("0x7")][_0x3e91("0xa")],Blockly[_0x3e91("0x7")][_0x3e91("0x70")]=Blockly.Msg[_0x3e91("0x105")],Blockly[_0x3e91("0x7")][_0x3e91("0xd")]=Blockly[_0x3e91("0x7")].PROCEDURES_DEFNORETURN_COMMENT,Blockly[_0x3e91("0x7")].PROCEDURES_DEFRETURN_DO=Blockly[_0x3e91("0x7")][_0x3e91("0x48")],Blockly[_0x3e91("0x7")][_0x3e91("0x1d3")]=Blockly[_0x3e91("0x7")][_0x3e91("0x20a")],Blockly[_0x3e91("0x7")][_0x3e91("0x11d")]=Blockly.Msg[_0x3e91("0x1dd")],Blockly[_0x3e91("0x7")][_0x3e91("0x23")]=Blockly[_0x3e91("0x7")].VARIABLES_DEFAULT_NAME,Blockly[_0x3e91("0x7")][_0x3e91("0x51")]=Blockly.Msg[_0x3e91("0x105")],Blockly[_0x3e91("0x7")][_0x3e91("0x68")]=_0x3e91("0x1b6"),Blockly[_0x3e91("0x7")][_0x3e91("0x18d")]=_0x3e91("0x108"),Blockly[_0x3e91("0x7")][_0x3e91("0x13a")]="260",Blockly[_0x3e91("0x7")][_0x3e91("0xa6")]=_0x3e91("0x240"),Blockly[_0x3e91("0x7")][_0x3e91("0xbc")]=_0x3e91("0x15e"),Blockly.Msg[_0x3e91("0x1c8")]=_0x3e91("0x102"),Blockly.Msg.PROCEDURES_HUE=_0x3e91("0x1e3"),Blockly[_0x3e91("0x7")][_0x3e91("0x1cc")]="20",Blockly[_0x3e91("0x7")][_0x3e91("0x67")]=_0x3e91("0x22c");